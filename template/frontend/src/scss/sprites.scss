/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$blank-name: 'blank';
$blank-x: 0px;
$blank-y: 0px;
$blank-offset-x: 0px;
$blank-offset-y: 0px;
$blank-width: 30px;
$blank-height: 30px;
$blank-total-width: 55px;
$blank-total-height: 55px;
$blank-image: 'images/spritesheet.png';
$blank: 0px 0px 0px 0px 30px 30px 55px 55px 'images/spritesheet.png' 'blank';
$checkedCheckbox-name: 'checkedCheckbox';
$checkedCheckbox-x: 30px;
$checkedCheckbox-y: 0px;
$checkedCheckbox-offset-x: -30px;
$checkedCheckbox-offset-y: 0px;
$checkedCheckbox-width: 25px;
$checkedCheckbox-height: 25px;
$checkedCheckbox-total-width: 55px;
$checkedCheckbox-total-height: 55px;
$checkedCheckbox-image: 'images/spritesheet.png';
$checkedCheckbox: 30px 0px -30px 0px 25px 25px 55px 55px 'images/spritesheet.png' 'checkedCheckbox';
$unCheckedCheckbox-name: 'unCheckedCheckbox';
$unCheckedCheckbox-x: 0px;
$unCheckedCheckbox-y: 30px;
$unCheckedCheckbox-offset-x: 0px;
$unCheckedCheckbox-offset-y: -30px;
$unCheckedCheckbox-width: 25px;
$unCheckedCheckbox-height: 25px;
$unCheckedCheckbox-total-width: 55px;
$unCheckedCheckbox-total-height: 55px;
$unCheckedCheckbox-image: 'images/spritesheet.png';
$unCheckedCheckbox: 0px 30px 0px -30px 25px 25px 55px 55px 'images/spritesheet.png' 'unCheckedCheckbox';
$spritesheet-width: 55px;
$spritesheet-height: 55px;
$spritesheet-image: 'images/spritesheet.png';
$spritesheet-sprites: $blank $checkedCheckbox $unCheckedCheckbox;
$spritesheet: 55px 55px 'images/spritesheet.png' $spritesheet-sprites;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
